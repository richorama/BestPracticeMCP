name: Release and Publish

on:
  release:
    types: [published]

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta-http
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/bestpracticesmcp-http
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Extract metadata for HTTP Auth
      id: meta-http-auth
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/bestpracticesmcp-http-auth
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push HTTP image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./BestPracticesMCP-HTTP/Dockerfile
        push: true
        tags: ${{ steps.meta-http.outputs.tags }}
        labels: ${{ steps.meta-http.outputs.labels }}
        platforms: linux/amd64,linux/arm64
    
    - name: Build and push HTTP Auth image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./BestPracticesMCP-HTTP-Auth/Dockerfile
        push: true
        tags: ${{ steps.meta-http-auth.outputs.tags }}
        labels: ${{ steps.meta-http-auth.outputs.labels }}
        platforms: linux/amd64,linux/arm64

  publish-nuget:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore BestPracticesMCP.sln
    
    - name: Build
      run: dotnet build BestPracticesMCP.sln --configuration Release --no-restore
    
    - name: Pack
      run: dotnet pack BestPracticesCommonMCP/BestPracticesCommonMCP.csproj --configuration Release --no-build --output ./packages
    
    - name: Push to NuGet
      run: dotnet nuget push ./packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      if: ${{ secrets.NUGET_API_KEY != '' }}
